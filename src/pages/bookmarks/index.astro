---
import BookmarkCategory from "@/components/BookmarkCategory";
import PageLayout from "@/layouts/Base";
import { ogFetcher } from "@/lib/ogFetchers";

const bookmarks = await (await fetch(import.meta.env.API_URL +'/bookmarks')).json();

const meta = {
  title: "Bookmarks",
  description: "A collection of bookmarks I find interesting",
};

// foreach bookmark get the url go get the opengraph data

const bookmarksWithMetadata =  await Promise.all(
  bookmarks.map(async bookmark => {
    const results = await ogFetcher(bookmark['link']);
    return {
      ...bookmark,
      metadata: results,
    }
}));

//split bookmarks into arrays grouped by categories ('useful','fun','affliate')
const usefulBookmarks = bookmarksWithMetadata.filter(bookmark => bookmark.category === 'useful');
const funBookmarks = bookmarksWithMetadata.filter(bookmark => bookmark.category === 'fun');
const affiliateBookmarks = bookmarksWithMetadata.filter(bookmark => bookmark.category === 'affiliate');

export const prerender = true
---

<PageLayout meta={meta}>
  <h1 class="title mb-8 sm:mb-6">Bookmarks I find fun, useful, or just more people need to see...</h1>
  {usefulBookmarks && (<BookmarkCategory title="Useful" bookmarks={usefulBookmarks} />)}
  {funBookmarks.length > 0 && (<BookmarkCategory title="Fun" bookmarks={funBookmarks} />)}
  {affiliateBookmarks.length > 0 && (<BookmarkCategory title="Affiliate" bookmarks={affiliateBookmarks} />)}
</PageLayout>
