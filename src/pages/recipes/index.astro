---
import { getAllRecipes } from '../../lib/recipes.data';
import BaseLayout from '../../layouts/Base.astro';
import { getTagSlug, formatTagForDisplay } from '@/utils';
const recipes = await getAllRecipes();
const meta = {
	title: 'Recipes',
	description: 'Cooklang recipes with timers, scaling, and cook mode.',
	ogImage: undefined,
	articleDate: undefined,
};
---

<BaseLayout meta={meta}>
	<div class="recipes-listing">
		<header class="recipes-header">
			<h1>Recipes</h1>
			<p class="recipes-subtitle">Discover delicious recipes with interactive timers and cook mode</p>
		</header>

		<div class="recipes-grid" id="list">
			{recipes.map((r) => (
				<article class="recipe-card">
					{r.image && (
						<div class="recipe-card-image">
							<img src={r.image} alt={r.title} />
						</div>
					)}
					<div class="recipe-card-content">
						<h2 class="recipe-card-title">
							<a href={`/recipes/${r.slug}/`}>{r.title}</a>
						</h2>
						{r.description && <p class="recipe-card-description">{r.description}</p>}
						{r.tags.length ? (
							<div class="recipe-card-tags">
								{r.tags.map((tag) => (
									<a href={`/recipes/tags/${getTagSlug(tag)}`} class="tag" title={`View recipes with tag: ${formatTagForDisplay(tag)}`}>
										{formatTagForDisplay(tag)}
									</a>
								))}
							</div>
						) : null}
						{r.servings && (
							<div class="recipe-card-meta">
								<span class="servings">{r.servings} servings</span>
							</div>
						)}
					</div>
				</article>
			))}
		</div>

		<script type="application/json" id="recipes-data">{JSON.stringify(recipes)}</script>
	</div>

	<script type="module">
		import Fuse from 'https://cdn.jsdelivr.net/npm/fuse.js@7.0.0/+esm';
		const data = JSON.parse(document.getElementById('recipes-data').textContent);
		const fuse = new Fuse(data, { keys: ['title', 'tags', 'ingredients.name', 'description'] });
		const q = document.getElementById('q');
		const list = document.getElementById('list');

		q.addEventListener('input', () => {
			const term = q.value.trim();
			const results = term ? fuse.search(term).map((r) => r.item) : data;
			list.innerHTML = results
				.map(
					(r) => `
						<article class="recipe-card">
							${r.image ? `
								<div class="recipe-card-image">
									<img src="${r.image}" alt="${r.title}" />
								</div>
							` : ''}
							<div class="recipe-card-content">
								<h2 class="recipe-card-title">
									<a href="/recipes/${r.slug}/">${r.title}</a>
								</h2>
								${r.description ? `<p class="recipe-card-description">${r.description}</p>` : ''}
								${r.tags.length ? `
									<div class="recipe-card-tags">
										${r.tags.map(tag => `<a href="/recipes/tags/${encodeURIComponent(tag.toLowerCase().trim())}" class="tag" title="View recipes with tag: ${tag}">${tag}</a>`).join('')}
									</div>
								` : ''}
								${r.servings ? `
									<div class="recipe-card-meta">
										<span class="servings">${r.servings} servings</span>
									</div>
								` : ''}
							</div>
						</article>
					`
				)
				.join('');
		});
	</script>

	<style>
		.recipes-listing {
			max-width: 1200px;
			margin: 0 auto;
			padding: 2rem;
		}

		.recipes-header {
			text-align: center;
			margin-bottom: 3rem;
		}

		.recipes-header h1 {
			font-size: 3rem;
			font-weight: 700;
			margin-bottom: 1rem;
			color: var(--theme-text);
			font-family: 'Oswald', sans-serif;
			text-transform: uppercase;
			letter-spacing: 1px;
		}

		.recipes-subtitle {
			font-size: 1.2rem;
			color: var(--theme-quote);
			font-style: italic;
		}

		.search-container {
			margin-bottom: 3rem;
			display: flex;
			justify-content: center;
		}

		.search-input {
			width: 100%;
			max-width: 500px;
			padding: 1rem 1.5rem;
			border: 2px solid var(--theme-accent);
			border-radius: 8px;
			background: var(--theme-bg);
			color: var(--theme-text);
			font-size: 1.1rem;
			font-family: 'Roboto', sans-serif;
			transition: border-color 0.3s ease;
		}

		.search-input:focus {
			outline: none;
			border-color: var(--theme-accent-hover);
		}

		.recipes-grid {
			display: grid;
			grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
			gap: 2rem;
		}

		.recipe-card {
			background: var(--theme-bg);
			border-radius: 12px;
			overflow: hidden;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			transition: transform 0.3s ease, box-shadow 0.3s ease;
		}

		.recipe-card:hover {
			transform: translateY(-4px);
			box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
		}

		.recipe-card-image {
			position: relative;
			overflow: hidden;
			height: 200px;
		}

		.recipe-card-image img {
			width: 100%;
			height: 100%;
			object-fit: cover;
			filter: grayscale(100%);
			transition: filter 0.3s ease;
		}

		.recipe-card:hover .recipe-card-image img {
			filter: grayscale(0%);
		}

		.recipe-card-content {
			padding: 1.5rem;
		}

		.recipe-card-title {
			margin: 0 0 0.75rem 0;
			font-size: 1.5rem;
			font-weight: 600;
			font-family: 'Oswald', sans-serif;
			text-transform: uppercase;
			letter-spacing: 0.5px;
		}

		.recipe-card-title a {
			color: var(--theme-text);
			text-decoration: none;
			transition: color 0.3s ease;
		}

		.recipe-card-title a:hover {
			color: var(--theme-accent);
		}

		.recipe-card-description {
			margin: 0 0 1rem 0;
			color: var(--theme-quote);
			font-style: italic;
			line-height: 1.5;
		}

		.recipe-card-tags {
			display: flex;
			flex-wrap: wrap;
			gap: 0.5rem;
			margin-bottom: 1rem;
		}

		.tag {
			background: var(--theme-accent);
			color: white;
			padding: 0.25rem 0.75rem;
			border-radius: 20px;
			font-size: 0.9rem;
			font-weight: 500;
			text-decoration: none;
			transition: background-color 0.3s ease, transform 0.2s ease;
		}

		.tag:hover {
			background: var(--theme-accent-dark, #1a4d3a);
			transform: translateY(-1px);
		}

		.recipe-card-meta {
			display: flex;
			align-items: center;
			gap: 1rem;
		}

		.servings {
			color: var(--theme-accent);
			font-weight: 600;
			font-size: 0.9rem;
		}

		@media (max-width: 768px) {
			.recipes-listing {
				padding: 1rem;
			}

			.recipes-header h1 {
				font-size: 2rem;
			}

			.recipes-grid {
				grid-template-columns: 1fr;
				gap: 1.5rem;
			}
		}
	</style>
</BaseLayout>


</BaseLayout>


