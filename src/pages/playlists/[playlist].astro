---
import PageLayout from "@/layouts/Base";
import type { GetStaticPathsResult } from "astro";
import ImageWithBadge from "src/components/ImageWithBadge";
import Tracks from "src/components/Tracks";
import type { PlaylistWithAllRelationships, TrackWithAllRelationships } from "@/lib/types/spotify";
import { getPlaylistsfromDB } from "@/data/models/playlist";
import type { Artwork } from "@prisma/client";

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const params = [];
  const playlists = await getPlaylistsfromDB();

  for await (const playlist of playlists) {
    params.push({
      params: { playlist: playlist.id },
      props: { playlist, tracks: playlist.tracks },
    });
  }

  return params;
}

const { playlist, tracks } = Astro.props as {
  playlist: PlaylistWithAllRelationships;
  tracks: TrackWithAllRelationships[];
};

const meta = {
  title: playlist.name,
  description: `Playlist of liked songs for the month ${playlist.name}`,
  ogImage: `/playlists/og-image/${playlist.id}.png`,
};

export const prerender = true;
---

<PageLayout meta={meta}>
  <h1 class="title mb-6">{playlist.name}</h1>
  <a href="/playlists" class="cactus-link mb-4">&lt; Back</a>
  <div class="mt-6 flex flex-col gap-4 sm:flex-row">
    <div class="w-full sm:w-1/4">
      <a href={playlist.externalUrl} class="cactus-link" target="_blank">
        <ImageWithBadge
          client:load
          imageUrl={playlist.artwork.find((item: Artwork) => item.height == 300)?.url ?? ""}
          underText="Play on Spotify"
        />
      </a>
    </div>
    <div class="flex-1">
      <h2 class="my-4 flex justify-between sm:justify-start sm:gap-4">
        <span>Tracks</span><span class="text-accent">({tracks.length ?? 0})</span>
      </h2>
      {
        tracks && (
          <>
            <Tracks client:load tracks={tracks} />
          </>
        )
      }
    </div>
  </div>
</PageLayout>
