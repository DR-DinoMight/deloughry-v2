---
import type { CollectionEntry } from "astro:content";
import { getTagSlug } from "../../utils/tags";

interface Props {
	content: CollectionEntry<"post">;
}

const { content } = Astro.props;

const datetime = content.data.publishDate.toISOString();
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<h1 class="p-name title" transition:name={"post-title" + content.slug}>{content.data.title}</h1>
<a class="u-url" href={canonicalURL}
	><time datetime={datetime} class="dt-published" transition:name={"post-date" + content.slug}>{datetime}</time></a
>
{
	!!content.data.tags?.length && (
		<div class="inline before:content-['|']">
			<svg
				aria-hidden="true"
				focusable="false"
				xmlns="http://www.w3.org/2000/svg"
				class="inline-block h-6 w-6"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				fill="none"
				stroke-linecap="round"
				stroke-linejoin="round"
			>
				<path stroke="none" d="M0 0h24v24H0z" fill="none" />
				<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
				<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
				<path d="M6 9h-.01" />
			</svg>
			{content.data.tags.flatMap((tag, i) => (
				<>
					<a
						class="cactus-link inline-block before:content-['#']"
						aria-label={`View more blogs with the tag ${tag}`}
						href={`/tags/${getTagSlug(tag)}`}
					>
						{tag}
					</a>
					{i < content.data.tags.length - 1 && ", "}
				</>
			))}
		</div>
	)
}
<p class="mt-8 border-l-4 border-accent pl-4 text-lg" transition:name={"post-desc" + content.slug}>{content.data.description}</p>
